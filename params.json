{"name":"D2 Simple Socket Server","body":"This software is licensed under the GPL v2 license.\r\n\r\nCompiled and tested with DMD64 D Compiler v2.059 on ubuntu 12.04\r\n\r\nTested automatically by attacking the service with many multiple concurrent requests (SocketClient.java) that in turn ensures less probability for deadlocks.\r\n\r\nSingle threaded and non-blocking.\r\nSupports many thousands of concurrent requests at any given time. \r\n\r\nHOWTO:\r\n\r\nDownload or fork into any arbitrary folder.\r\n\r\nInstall DDT for Eclipse. Execute the automatically generated executable from the project directory, or right click the project in Eclipse and choose \"Run as\" -> \"D Application\".\r\n\r\n    ~/d2-simple-socket-server$ bin/SimpleServer\r\n    Disable Log: false\tLog All: true\tLog level: ALL\r\n    2012-06-01T18:15:23.5954827Z INFO: Listening on port 1234\r\n\r\nThis will load the logger properties file in the project directory. If you decide to move the executable, and forget about the logger.properties file it will set LogLevel to ALL by default like this:\r\n\r\n    ~/d2-simple-socket-server$ bin/SimpleServer\r\n    Failed in AbstractLogger constructor.\r\n    Falling back to LogLevel.ALL.\r\n    To override the log level you'll have to add a logger.properties file in the current directory, that you fill with the property \"simpleserver.logger.level=INFO\"\r\n    2012-06-01T18:18:07.4504363Z INFO: Listening on port 1234","tagline":"This is an asynchronous, non blocking and fast socket server based on a modified version of Splat. By adding an abstract layer of classes and utility methods it is possible with this library to quickly and easily configure most simple socket services. Does not support sending large byte streams, and best tip is to base64 encode the byte stream and then deocde the data in the command handler.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}